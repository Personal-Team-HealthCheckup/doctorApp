name: CI/CD pipeline

on: 
  push:
    branches:    
      - '**'

jobs:
  build:

    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install Dependencies
      run: |
        yarn install
    
    - name: Run Tests
      run: |
        yarn test --coverage
    - name: Run Linter
      run: |
        yarn lint
      env:
        CI: true
    
    - name: Build Project
      run: |
        yarn run build

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
        args: >
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.exclusions=**/*.test.tsx,**/__tests__/**
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Deploy to Vercel
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      run: |
        npm install -g vercel
        vercel --prod --token=$VERCEL_TOKEN --yes --name healthcheck
